#!/usr/bin/perl
use strict;
use warnings;

use CQS::ClassFactory;
use CQS::FileUtils;
use CQS::SystemUtils;
use CQS::ConfigUtils;
use Pipeline::RNASeq;

my $def = {
  #define task name, this name will be used as prefix of a few result, such as read count table file name.
  task_name      => "B3436",
  
  #email which will be used for notification if you run through cluster
  email          => "quanhu.sheng\@vanderbilt.edu",
  
  #target dir which will be automatically created and used to save code and result
  target_dir     => "/scratch/cqs/shengq1/test/pipeline_rnaseq_simple",

  #cqs in house software which will be used to generate count table. https://github.com/shengqh/CQS.Tools/
  cqstools       => "/home/shengq1/cqstools/cqstools.exe",
  
  #gene annotation file
  transcript_gtf => "/scratch/cqs/shengq1/references/ensembl/v78/Mus_musculus.GRCm38.78.MT.gtf",
  
  #gene name to transcription name map file which is generated by "mono cqstools.exe gtf_buildmap".
  name_map_file  => "/scratch/cqs/shengq1/references/ensembl/v78/Mus_musculus.GRCm38.78.MT.map",
  
  #genome sequence file
  fasta_file     => "/scratch/cqs/shengq1/references/mm10_sorted_M/mm10.fa",
  
  #source files
  files          => {
    "JDB-01" => [ "/scratch/cqs/shengq1/rnaseq/20160509_brown_3436/data/3436-JDB-1_1_sequence.txt.gz", "/scratch/cqs/shengq1/rnaseq/20160509_brown_3436/data/3436-JDB-1_2_sequence.txt.gz" ],
    "JDB-02" => [ "/scratch/cqs/shengq1/rnaseq/20160509_brown_3436/data/3436-JDB-2_1_sequence.txt.gz", "/scratch/cqs/shengq1/rnaseq/20160509_brown_3436/data/3436-JDB-2_2_sequence.txt.gz" ],
    "JDB-03" => [ "/scratch/cqs/shengq1/rnaseq/20160509_brown_3436/data/3436-JDB-3_1_sequence.txt.gz", "/scratch/cqs/shengq1/rnaseq/20160509_brown_3436/data/3436-JDB-3_2_sequence.txt.gz" ],
    "JDB-04" => [ "/scratch/cqs/shengq1/rnaseq/20160509_brown_3436/data/3436-JDB-4_1_sequence.txt.gz", "/scratch/cqs/shengq1/rnaseq/20160509_brown_3436/data/3436-JDB-4_2_sequence.txt.gz" ],
    "JDB-05" => [ "/scratch/cqs/shengq1/rnaseq/20160509_brown_3436/data/3436-JDB-5_1_sequence.txt.gz", "/scratch/cqs/shengq1/rnaseq/20160509_brown_3436/data/3436-JDB-5_2_sequence.txt.gz" ],
    "JDB-06" => [ "/scratch/cqs/shengq1/rnaseq/20160509_brown_3436/data/3436-JDB-6_1_sequence.txt.gz", "/scratch/cqs/shengq1/rnaseq/20160509_brown_3436/data/3436-JDB-6_2_sequence.txt.gz" ],
  },
  
  #group information for visualization and comparison 
  groups => {
    "FED"  => [ "JDB-01", "JDB-02", "JDB-03" ],
    "DMSO" => [ "JDB-04", "JDB-05", "JDB-06" ],
  },
  
  #comparison information, in each comparison, the first one is control. For example, in comparison "DMSO_vs_FED", "FED" is control.
  pairs => {
    "DMSO_vs_FED" => [ "FED", "DMSO" ],
  },

  #using STAR. you can also use hisat2, then you have to set hisat2_index 
  aligner => "star",
  star_index => "/scratch/cqs/shengq1/references/mm10_sorted_M/STAR_index_v38.78_2.5.0b_sjdb49",
  
  #perform RNASeQC or not
  perform_rnaseqc => 1,
  rnaseqc_jar     => "/home/shengq1/local/bin/RNA-SeQC_v1.1.8.jar",
  
  #perform variant calling based on GATK best practice. If you set it to 1, then you will need to fill in the following required entries
  perform_call_variants => 0,
  dbsnp => "",
  gatk_jar => "",
  picard_jar => "",
  annovar_param => "",
  annovar_db => "",
  annovar_buildver => "",
};

performRNASeq($def);
1;

